plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            "org.apache.logging.log4j:log4j-core:${log4jVersion}",
            "org.apache.logging.log4j:log4j-api:${log4jVersion}",
            "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}",
            'com.amazonaws:aws-lambda-java-core:1.2.1',
            'com.amazonaws:aws-lambda-java-events:3.11.0',
            'com.amazonaws:aws-lambda-java-log4j2:1.5.1',
            "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}",
            'software.amazon.awssdk:dynamodb-enhanced:2.17.152'
//            'software.amazon.awssdk:bom:2.17.152' - use this if you are too lazy too find the specific lib to use, or are using a LOT of the sdk modules
    )
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    environment "STAGE","testing"
    useJUnitPlatform()
}

// Task for building the zip file for upload
task buildZip(type: Zip) {
    // Using the Zip API from gradle to build a zip file of all the dependencies
    //
    // The path to this zip file can be set in the serverless.yml file for the
    // package/artifact setting for deployment to the S3 bucket
    //
    // Link: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Zip.html

    // set the base name of the zip file
    archiveBaseName = "expenses-service"
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip

task wrapper(type: Wrapper) {
    gradleVersion = '7.1'
}

task prepareKotlinBuildScriptModel {
}

